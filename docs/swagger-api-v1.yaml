swagger: '2.0'
info:
  title: PronosticApp API
  description: >
    API para gestionar los jugadores, comunidades, pronósticos o
    históricos para un juego de porra.
  version: 1.0.0
host: {{server}}
schemes:
  - http
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Jugadores
    description: Todo sobre los jugadores
  - name: Comunidades
    description: Comunidades actuales en funcionamiento
  - name: Imágenes
    description: Datos de las imágenes almacenadas
  - name: Pronósticos
    description: Prnósticos de los jugadores
  - name: Históricos
    descritpion: Posicionamiento a lo largo de la competición
paths:
  /player/register:
    post:
      summary: Registrar un nuevo jugador
      description: Permite crear un nuevo jugador en la aplicación.
      parameters:
        - name: body
          in: body
          description: Datos del jugador a registrar.
          required: true
          schema:
            type: object
            required:
              - nickname
              - email
              - password
            properties:
              nickname:
                type: string
                description: Nickname del jugador
              email:
                type: string
                description: Email del jugador
              password:
                type: string
                description: Password del jugador
              nombre:
                type: string
                description: Nombre del jugador
              apellidos:
                type: string
                description: Apellidos del jugador
              id_avatar:
                type: integer
                description: ID de la imagen del avatar para el jugador
                default: 1
              color:
                type: string
                description: Color para el avatar del jugador en formato hexadecimal
                default: '#FFFFFF'
            example:
              nickname: reymon
              email: prueba@prueba.com
              password: aaAA1234
              nombre: Nombre
              apellidos: Apellidos
              id_avatar: 1
              color: '#FFAADD'
      tags:
        - Jugadores
      responses:
        200:
          description: Registro correcto
          schema:
            $ref: '#/definitions/MessageResult'
        default:
          description: Error durante el registro
          schema:
            $ref: '#/definitions/MessageResult'
  /player/login:
    post:
      summary: Login de un jugador
      description: |
        Permite a un jugador loguearse en la aplicación.
      parameters:
        - name: body
          in: body
          description: Datos del jugador para hacer login
          required: true
          schema:
            type: object
            required:
              - player
            properties:
              player:
                type: string
                description: Nickname o email del jugador
              password:
                type: string
                description: Password del jugador
            example:
              player: reymon
              password: aaAA1234
      tags:
        - Jugadores
      responses:
        200:
          description: Login correcto
          schema:
            type: object
            properties:
              token:
                type: string
                description: |
                  Token para identiificar al jugador.
                  Es necesario mandarlo en la cabecera en cada petición que requiera
                  autenticación.
              jugador:
                $ref: '#/definitions/Player'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
  /player/exist:
    post:
      summary: Comprueba si el nickname o el email de un usuario ya existen
      description: |
        Permite comprobar si el email o el nickanme (o ambos) de un usuario están disponibles o no.
      parameters:
        - in: body
          name: body
          required: true
          description : Nickname y/o email a comprobar
          schema:
            type: object
            properties:
              nickname:
                type: string
                description: Nickname a comprobar
              email:
                type: string
                description: Email a comprobar
            example:
              nickname: Juanito
      tags:
        - Jugadores
      responses:
        200:
          description: |
            Información acerca de la comprobación del email o el nombre.
            Devuelve error: true si alguno de los datos pasados ya existe.
          schema:
            $ref: '#/definitions/MessageResult'
        400:
          $ref: '#/responses/ParametersNeeded'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
  /player/logout:
    post:
      summary: Logout de un jugador
      description: |
        Permite a un jugador hacer logout en la aplicación.
      tags:
        - Jugadores
      responses:
        200:
          description: Logout correcto
          schema:
            $ref: '#/definitions/MessageResult'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /player/info:
    get:
      summary: Información del jugador
      description: |
        Permite a un jugador recuperar la información actualmente almacenada en la aplicación.
      tags:
        - Jugadores
      responses:
        200:
          description: Datos del jugador
          schema:
            $ref: '#/definitions/Player'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /images/list:
    get:
      summary: Listado de imágenes del servidor
      description: Devuelve un listado de las imágenes del servidor.
      tags:
        - Imágenes
      responses:
        200:
          description: Lista de imágenes
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
            example:
              - id: 1
                url: /images/1.jpg
              - id: 2
                url: /images/2.jpg
              - id: 3
                url: /images/3.jpg
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
  /community/create:
    post:
      summary: Crea una nueva comunidad
      description: Permite crear una nueva comunidad de jugadores en la aplicación.
      parameters:
        - name: body
          in: body
          description: Datos de la communidad a crear.
          required: true
          schema:
            type: object
            required:
              - nombre
            properties:
              nombre:
                type: string
                description: Nombre de la comunidad
              privada:
                type: boolean
                description: Si la comunidad es privada
              password:
                type: string
                description: Password de la comunidad si es privada
              id_imagen:
                type: integer
                description: ID de la imagen de la comunidad
                default: 1
            example:
              nombre: Comunidad Molona
              privada: true
              password: 1234abCD
              id_imagen: 2
      tags:
        - Comunidades
      responses:
        200:
          description: Comunidad creada correctamente
          schema:
            $ref: '#/definitions/Community'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /community/{idCommunity}/players:
    get:
      summary: Lista los jugadores de una comunidad
      description: Devuelve un listado con los jugadores pertenecientes a la comunidad.
      parameters:
        - in: path
          name: idCommunity
          type: integer
          required: true
          description : ID de la comunidad
      tags:
        - Comunidades
      responses:
        200:
          description: Listado de jugadores de la comunidad
          schema:
            type: array
            items:
              $ref: '#/definitions/Player'
            example:
              - id: 3,
                nickname: Perro
                email: perro@guau.com
                nombre: Dog
                apellidos: Doggy
              - id: 5,
                nickname: Gato
                email: gato@miau.com
                nombre: Kitty
                apellidos: Soft
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /community/exist:
    post:
      summary: Comprueba si el nombre de una comunidad ya existe
      description: Permite comprobar si el nombre una comunidad ya existe o no.
      parameters:
        - in: body
          name: body
          required: true
          description: Nombre de la comunidad a comprobar
          schema:
            type: object
            required:
              - nombre
            properties:
              nombre:
                type: string
                description: Nombre de la comunidad
            example:
              nombre: Comunidad 1
      tags:
        - Comunidades
      responses:
        200:
          description: Compruebas si el nombre de la comunidad existe. Devuelve "error" true en tal caso.
          schema:
            $ref: '#/definitions/MessageResult'
        400:
          $ref: '#/responses/ParametersNeeded'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /community/private/join:
    post:
      summary: Hace miembro de la comunidad privada al jugador actual
      description: |
        Hace miembro de la comunidad pasada al jugador identificado por el token, siempre que la comunidad
        exista y la password pasada sea correcta.
      parameters:
        - in: body
          name: body
          required: true
          description: Datos de la comunidad privada a la que unirse
          schema:
            type: object
            required:
              - nombre_comunidad
              - password_comunidad
            properties:
              nombre_comunidad:
                type: string
                description: Nombre de la comunidad
              password_comunidad:
                type: string
                description: Password de la comunidad
            example:
              nombre_comunidad: Comunidad 1
              password_comunidad: 12345678
      tags:
        - Comunidades
      responses:
        200:
          description: El jugador se ha hecho miembro de la comunidad correctamente
          schema:
            $ref: '#/definitions/MessageResult'
        400:
          $ref: '#/responses/ParametersNeeded'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /community/public/list:
    get:
      summary: Lista todas las comunidades públicas
      description: |
        Devuelve un listado con todas las comunidades públicas.
      tags:
        - Comunidades
      responses:
        200:
          description: Lista de todas las comunidades públicas
          schema:
            type: array
            items:
              $ref: '#/definitions/PublicCommunity'
            example:
              - id: 1
                nombre: Comunidad 1
                url: /images/1.jpg
              - id: 2
                nombre: Comunidad 2
                url: /images/2.jpg
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
  /community/public/join:
    post:
      summary: Hace miembro de una comunidad pública al jugador actual
      description: |
        Hace miembro de la comunidad pasada al jugador identificado por el token.
        Si se le pasa el parámetro "aleatorio" a true se seleccionará una comunidad para las que el
        jugador aún no sea miembro. Si se le pasa el parámetro a false, hay que pasar obligatoriamente el
        "id_comunidad" para seleccionar la comunidad a la que unirá el jugador.
      parameters:
        - in: body
          name: body
          required: true
          description: Datos necesarios para unirse a la comunidad pública
          schema:
            type: object
            properties:
              aleatorio:
                type: boolean
                description: Si la unión a la comunidad debe ser aleatoria o no
              id_comunidad:
                type: integer
                description: ID de la comunidad en caso de que aleatorio se pase a false
            example:
              aleatorio: false
              id_comunidad: 52
      tags:
        - Comunidades
      responses:
        200:
          description: El jugador se ha hecho miembro de la comunidad correctamente
          schema:
            $ref: '#/definitions/MessageResult'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          description: Error inesperado
          schema:
            $ref: '#/definitions/MessageResult'
      security:
        - token: []
securityDefinitions:
  token:
    type: apiKey
    name: X-Auth-Token
    in: header
responses:
  Unauthorized:
    description: No autorizado para acceder al recurso
    schema:
      $ref: "#/definitions/MessageResult"
  ParametersNeeded:
    description: Faltan parámetros obligatorios
    schema:
      $ref: "#/definitions/MessageResult"
definitions:
  Community:
    type: object
    properties:
      id:
        type: integer
        description: Identificador único de la comunidad
      nombre:
        type: string
        description: Nombre de la comunidad
      privada:
        type: boolean
        description: Si la comunidad es privada o no
      url:
        type: string
        description: Url de la imagen de la comunidad
    example:
      id: 22
      nombre: Porra
      privada: true
      url: /images/2.jpg
      color: '#11AADD'
  PublicCommunity:
    type: object
    properties:
      id:
        type: integer
        description: Identificador único de la comunidad
      nombre:
        type: string
        description: Nombre de la comunidad
      url:
        type: string
        description: Url de la imagen de la comunidad
    example:
      id: 21
      nombre: Porrados
      url: /images/2.jpg
      color: '#11AADD'
  Player:
    type: object
    required:
      - nickname
      - email
      - password
    properties:
      id:
        type: integer
        description: Identificador único del jugador
      nickname:
        type: string
        description: Nickname del jugador
      email:
        type: string
        description: Email del jugador
      nombre:
        type: string
        description: Nombre del jugador
      apellidos:
        type: string
        description: Apellidos del jugador
      icon:
        type: integre
        description: Id de la imagen del avatar del jugador
      color:
        type: string
        description: Color del avatar del jugador
    example:
      id: 7
      nickname: nickA
      email: prueba@prueba.com
      nombre: Nombre
      apellidos: Ape Llidos
      icon: 7
      color: '#FFAA11'
  Image:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string
        description: Url relativa de la imagen respecto del nombre del server
  MessageResult:
    type: object
    properties:
      error:
        type: boolean
      descripcion:
        type: string
      mensajes:
        type: array
        items:
          type: object
          properties:
            code:
              type: integer
              description: Código de identificación del error
            obs:
              type: string
              description: Mensaje informativo
    example:
      error: true
      description: Validación incorrecta del campo 'nombre'
      mensajes:
        - code: 0
          obs: Mensaje de error estándar
        - code: 1
          obs: El mail ya existe
